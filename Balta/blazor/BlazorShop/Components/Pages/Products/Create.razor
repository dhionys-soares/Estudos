@page "/products/create"
@rendermode InteractiveServer
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@attribute [Authorize]

<h1>Create</h1>

<EditForm Model="@Model" OnValidSubmit="OnValidSubmitAsync">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nome do Produto</label>
        <InputText class="form-control" @bind-Value="Model.Title" />
    </div>

    <div class="mb-3">
        <label class="form-label">Descrição do Produto</label>
        <InputText class="form-control" @bind-Value="Model.Description" />
    </div>

    <div class="mb-3">
        <label class="form-label">Preço</label>
        <InputNumber class="form-control" @bind-Value="Model.Price" />
    </div>

    <div class="mb-3">
        <label class="form-label">Categoria</label>
        <InputSelect class="form-control" @bind-Value="Model.CategoryId">
            @foreach (var item in Categories)
            {
                <option value="@item.Id">@item.Title</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Criar</button>
    <a href="/">Cancelar</a>

</EditForm>

@code {
    public Product Model { get; set; } = new();
    public IEnumerable<Category> Categories { get; set; } = Enumerable.Empty<Category>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await Context.Categories.AsNoTracking().ToListAsync();
    }

    public async Task OnValidSubmitAsync()
    {
        await Context.Products.AddAsync(Model);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("/products");
    }
}